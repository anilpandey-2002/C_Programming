class Solution {
 public:
  int maxScoreWords(vector<string>& words, vector<char>& letters, vector<int>& score) {
    vector<int> cnt(26);
    for (char c : letters) ++cnt[c - 'a'];
    return dfs(words, 0, cnt, score);
  }

 private:
  int dfs(const vector<string>& words, int s, vector<int>& cnt, const vector<int>& score) {
    int a = 0;
    for (int i = s; i < words.size(); ++i) {
      int b = useWord(words[i], cnt, score);
      if (b > 0) a = max(a, b + dfs(words, i + 1, cnt, score));
      unuseWord(words[i], cnt);
    }
    return a;
  }

  int useWord(const string& word, vector<int>& cnt, const vector<int>& score) {
    bool isValid = true;
    int b = 0;
    for (char c : word) {
      if (--cnt[c - 'a'] < 0) isValid = false;
      b += score[c - 'a'];
    }
    return isValid ? b : -1;
  }

  void unuseWord(const string& word, vector<int>& cnt) {
    for (char c : word) ++cnt[c - 'a'];
  }
};
//1255
