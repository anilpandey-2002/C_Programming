#include <vector>
#include <algorithm>
#include <climits>

class Solution {
 public:
  int findTheCity(int n, std::vector<std::vector<int>>& edges, int distanceThreshold) {
    std::vector<std::vector<int>> dist(n, std::vector<int>(n, INT_MAX / 2));

    for (int i = 0; i < n; ++i)
      dist[i][i] = 0;

    for (const auto& edge : edges) {
      dist[edge[0]][edge[1]] = edge[2];
      dist[edge[1]][edge[0]] = edge[2];
    }

    for (int k = 0; k < n; ++k)
      for (int i = 0; i < n; ++i)
        for (int j = 0; j < n; ++j)
          dist[i][j] = std::min(dist[i][j], dist[i][k] + dist[k][j]);

    int a = -1, minCitiesCount = n;
    for (int i = 0; i < n; ++i) {
      int citiesCount = 0;
      for (int j = 0; j < n; ++j)
        if (dist[i][j] <= distanceThreshold)
          ++citiesCount;
      if (citiesCount <= minCitiesCount) {
        a = i;
        minCitiesCount = citiesCount;
      }
    }

    return a;
  }
};
